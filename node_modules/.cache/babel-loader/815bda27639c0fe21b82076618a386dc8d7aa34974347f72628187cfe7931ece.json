{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\philf\\\\Downloads\\\\VS Code\\\\Projects\\\\CrestviewEighty-Website\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const USER_ROLES = {\n  ADMIN: 'admin',\n  BOARD: 'board',\n  MEMBER: 'member'\n};\nconst MOCK_USERS = [{\n  id: '1',\n  email: 'admin@crestvieweighty.com',\n  password: 'admin123',\n  role: USER_ROLES.ADMIN,\n  name: 'HOA Administrator',\n  address: '123 Crestview Dr'\n}, {\n  id: '2',\n  email: 'board@crestvieweighty.com',\n  password: 'board123',\n  role: USER_ROLES.BOARD,\n  name: 'John Smith',\n  address: '456 Mountain View Ln'\n}, {\n  id: '3',\n  email: 'member@crestvieweighty.com',\n  password: 'member123',\n  role: USER_ROLES.MEMBER,\n  name: 'Jane Doe',\n  address: '789 Lake Vista Ct'\n}];\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('authUser');\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (error) {\n        localStorage.removeItem('authUser');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    setIsLoading(true);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const foundUser = MOCK_USERS.find(u => u.email === email && u.password === password);\n        if (foundUser) {\n          const {\n            password: _,\n            ...userWithoutPassword\n          } = foundUser;\n          setUser(userWithoutPassword);\n          setIsAuthenticated(true);\n          localStorage.setItem('authUser', JSON.stringify(userWithoutPassword));\n          setIsLoading(false);\n          resolve(userWithoutPassword);\n        } else {\n          setIsLoading(false);\n          reject(new Error('Invalid credentials'));\n        }\n      }, 1000);\n    });\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('authUser');\n  };\n  const hasRole = requiredRole => {\n    if (!user) return false;\n    const roleHierarchy = {\n      [USER_ROLES.ADMIN]: 3,\n      [USER_ROLES.BOARD]: 2,\n      [USER_ROLES.MEMBER]: 1\n    };\n    return roleHierarchy[user.role] >= roleHierarchy[requiredRole];\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"v1LRzRO747hYRtRdhUIJv9BiM4M=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","USER_ROLES","ADMIN","BOARD","MEMBER","MOCK_USERS","id","email","password","role","name","address","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","storedUser","localStorage","getItem","userData","JSON","parse","error","removeItem","login","Promise","resolve","reject","setTimeout","foundUser","find","u","_","userWithoutPassword","setItem","stringify","Error","logout","hasRole","requiredRole","roleHierarchy","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/philf/Downloads/VS Code/Projects/CrestviewEighty-Website/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const USER_ROLES = {\n  ADMIN: 'admin',\n  BOARD: 'board',\n  MEMBER: 'member'\n};\n\nconst MOCK_USERS = [\n  {\n    id: '1',\n    email: 'admin@crestvieweighty.com',\n    password: 'admin123',\n    role: USER_ROLES.ADMIN,\n    name: 'HOA Administrator',\n    address: '123 Crestview Dr'\n  },\n  {\n    id: '2',\n    email: 'board@crestvieweighty.com',\n    password: 'board123',\n    role: USER_ROLES.BOARD,\n    name: 'John Smith',\n    address: '456 Mountain View Ln'\n  },\n  {\n    id: '3',\n    email: 'member@crestvieweighty.com',\n    password: 'member123',\n    role: USER_ROLES.MEMBER,\n    name: 'Jane Doe',\n    address: '789 Lake Vista Ct'\n  }\n];\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('authUser');\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (error) {\n        localStorage.removeItem('authUser');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    setIsLoading(true);\n    \n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const foundUser = MOCK_USERS.find(\n          u => u.email === email && u.password === password\n        );\n        \n        if (foundUser) {\n          const { password: _, ...userWithoutPassword } = foundUser;\n          setUser(userWithoutPassword);\n          setIsAuthenticated(true);\n          localStorage.setItem('authUser', JSON.stringify(userWithoutPassword));\n          setIsLoading(false);\n          resolve(userWithoutPassword);\n        } else {\n          setIsLoading(false);\n          reject(new Error('Invalid credentials'));\n        }\n      }, 1000);\n    });\n  };\n\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('authUser');\n  };\n\n  const hasRole = (requiredRole) => {\n    if (!user) return false;\n    \n    const roleHierarchy = {\n      [USER_ROLES.ADMIN]: 3,\n      [USER_ROLES.BOARD]: 2,\n      [USER_ROLES.MEMBER]: 1\n    };\n    \n    return roleHierarchy[user.role] >= roleHierarchy[requiredRole];\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    hasRole\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}